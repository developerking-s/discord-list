---
import Root from "@/layouts/Layout.astro";
let { id } = Astro.params;
import approx from "approximate-number";
import { Separator } from "@/components/ui/separator";
import { db, Bots, eq, or } from "astro:db";
import getAvatarURL from "@/lib/get-avatar-url";
import { type Bot } from "@/components/bot-card";
import PopupDesktop from "@/components/botpage-popup-desktop";
import TwemojiText from "@/components/twemoji-text";
import BotPage from "@/components/legacy-bot-page";
import { getBanner } from "../../api/internals/users/[id]/banner";
import { asDrizzleTable } from "@astrojs/db/runtime";
import getBannerURL from "@/lib/get-banner-url";
const bot = (
  await db
    .select({
      id: Bots.id,
      slug: Bots.slug,
      avatar: Bots.avatar,
      username: Bots.username,
      discriminator: Bots.discriminator,
      short: Bots.short,
      votes: Bots.votes,
      servers: Bots.servers,
      invite: Bots.invite,
      bg: Bots.bg,
      desc: Bots.desc,
      badges: Bots.badges,
    })
    .from(Bots)
    .where(or(eq(Bots.slug, id), eq(Bots.id, id)))
)[0];
if (!bot)
  return new Response("", {
    status: 302,
    headers: {
      location: "/404",
    },
  });

if (!bot.bg) {
  const botbanner = await getBanner(bot.id, import.meta.env.DISCORD_TOKEN);
  if (botbanner) {
    bot.bg = getBannerURL({ banner: botbanner, id: bot.id });
    console.log(bot.bg);
    await db.update(Bots).set({ bg: botbanner }).where(eq(Bots.id, bot.id));
  }
}
if (bot.bg && bot.bg.startsWith("https://cdn.discordapp.com/banners")) {
  //we get banners from discord. we dont save it though, so we can modify image as we want.
  bot.bg = getBannerURL({ banner: bot.bg, id: bot.id });
}
---

<Root
  title={`${bot.username}#${bot.discriminator} Discord Bot | The Best Discord Bot List`}
  smallImgLink={getAvatarURL(bot.id, bot.avatar)}
  imgLink={bot.bg}
  description={`${bot.username} is in ${approx(bot.servers).toUpperCase()} servers, Add It Today! ${bot.short}`}
>
  <div>
    <div class="grid grid-cols-1 md:grid-cols-4 md:gap-4 p-4">
      {bot && <BotPage bot={bot as any} client:load client:only="react" />}
      {/* <SimilarBots /> */}
    </div>
  </div>
</Root>
<!-- {bot && <PopupDesktop bot={bot as any} client:media="!(min-width: 768px)" />} -->
